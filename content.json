{"meta":{"title":"Auwaves","subtitle":"","description":"我的博客","author":"Boringboys","url":"http://www.auwaves.com","root":"/"},"pages":[{"title":"404","text":"","path":"404/index.html","date":"03-14","excerpt":""},{"title":"about","text":"","path":"about/index.html","date":"03-14","excerpt":""},{"title":"activity","text":"","path":"activity/index.html","date":"03-14","excerpt":""},{"title":"categories","text":"","path":"categories/index.html","date":"03-14","excerpt":""},{"title":"links","text":"","path":"links/index.html","date":"03-14","excerpt":""},{"title":"paper","text":"","path":"paper/index.html","date":"03-14","excerpt":""},{"title":"project","text":"","path":"project/index.html","date":"03-14","excerpt":""},{"title":"tags","text":"","path":"tags/index.html","date":"03-14","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"03-14","excerpt":""}],"posts":[{"title":"正则表达式","text":"正则表达式正则表达式，又称规则表达式。（英语：Regular Expression，代码中简写为regex、regexp或RE），计算机科学的一个概念。正则表达式通常被用来检索、替换那些符合某个模式(规则)的文本。 正则表达式由一些普通字符和一些元字符（metacharacters）组成。普通字符包括大小写的字母和数字，而元字符则具有特殊的含义。下表列出了所有的元字符和对它们的描述。 字符描述 \\将下一个字符标记为特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。 ^匹配输入字符串的开始位置。 $匹配输入字符串的结束位置。 *匹配前面的子表达式零次或多次。 +匹配前面的子表达式一次或多次。 ?匹配前面的子表达式零次或一次。 {n}n 是一个非负整数。匹配确定的 n 次。 {n,}n 是一个非负整数。至少匹配n 次。 {n,m}m和n均为非负整数，其中n","path":"2020/03/14/正则表达式/","date":"03-14","excerpt":"","tags":[{"name":"正则匹配","slug":"正则匹配","permalink":"http://www.auwaves.com/tags/%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D/"}],"preview":"https://boringboys-1254394685.cos.ap-shanghai.myqcloud.com/img/52pojie.jpg"},{"title":"广播域和冲突域","text":"广播域和冲突域广播域简单地说，广播域是一种环境，在该环境中通过线路发送的广播消息，可以被所有该环境中的主机或节点接收。 冲突域冲突域是其中的流量可能与其他流量相冲突的网络。冲突域中所有节点都链接到同一个被交换机和学习型网桥划分的相互连接的中继器集合。 区别在同一个冲突域中的每一个节点都能接收到所有被发送的帧；在同一个广播域中的每一个节点都能接收到任一设备发送的广播帧； 冲突域是基于物理层的，所以一些处在数据链路层的设备能够划分冲突域；广播域是基于数据链路层的，所以广播域只能有像路由器这样的网络层设备来划分。 作者：Boringboys原文链接：https://www.boringboys.top/article/网络篇之广播域和冲突域/版权声明：本文采用BY-NC-SA协议授权，转载请遵守此协议","path":"2020/03/14/网络篇之广播域和冲突域/","date":"03-14","excerpt":"","tags":[{"name":"广播域","slug":"广播域","permalink":"http://www.auwaves.com/tags/%E5%B9%BF%E6%92%AD%E5%9F%9F/"},{"name":"冲突域","slug":"冲突域","permalink":"http://www.auwaves.com/tags/%E5%86%B2%E7%AA%81%E5%9F%9F/"},{"name":"网络","slug":"网络","permalink":"http://www.auwaves.com/tags/%E7%BD%91%E7%BB%9C/"}]},{"title":"密码学 Diffie-Hellman密钥交换协议","text":"密码学–Diffie-Hellman密钥交换协议概念Diffie-Hellman密钥交换协议（Diffie-Hellman key exchange agreement）简称“D-H协议”，是1976年 Whitfield Diffie 和 Martin Hellman 合作发明的安全协议，它可以让双方在完全没有对方任何预先信息的条件下通过不安全信道创建起一个密钥。这个密钥可以在后续的通信中作为对称密钥来加密通信内容。 算法描述（1）通信双方 Alice 和 Bob 先确定两个大素数 p 和 q ，这两个数不需要保密，因此通信双方可以通过不安全信道协商并确定这两个数； （2）Alice 选择一个大的随机数 r1 并计算：A=q^r1 (mod p)； （3）Alice 将 A 发送给 Bob； （4）Bob 选择另外一个大的随机数 r2 并计算：B=q^r2 (mod p)； （5）Bob 将 B 发送给 Alice； （6）Alice 计算密钥：k1=B^r1 (mod p)； （7）Bob 计算密钥：k2=A^r2 (mod p) ps:最后，Alice 和 Bob 计算得到的 k1=k2，即得到的密钥 举例（1）假设 Alice 和 Bob 选取的 p=11 ， q=5； （2）Alice 选择的随机数取 r1=3，则 A=5^3 (mod 11)=4； （3）Alice 将 A=4 发送给 Bob； （4）Bob 选择的随机数取 r2=6，则 B=5^6 (mod 11)=5； （5）Bob 将 B=5 发送给 Alice； （6）Alice 计算：k1=5^3 (mod 11)=4； （7）Bob 计算：k2=4^6 (mod 11)=4； （8）交换得到的密钥：k1=k2=4 安全性D-H协议的安全性在于，在有限域中计算离散对数远远难于在同一个域中计算指数。 从上面给出的例子解释，就是当 Alice 知道 r1=3，以及 p 和 q 的情况下可以十分容易的计算得到 A；而第三方在只知道 p，q 和 A 的情况下却很难计算得到 Alice 取得随机数 r1，所以无法使用 Bob 通过公共信道发送的 B 计算得到密钥 k；对于 Bob 取的随机数 r2，与对 Alice 的分析一样，第三方同样难以通过计算得到，也就难以通过 Alice 发送的 A 计算出密钥。 缺陷D-H协议也存在缺陷，即容易受到中间人攻击 ( Man-in-the-Middle Attack ，简称 “MITM攻击” ) ，就是通过拦截正常的网络通信数据，并进行数据篡改和嗅探，而通信双方却毫不知情。 中间人攻击的过程如下： （1）第一步和上面所说的一样，通信双方 Alice 和 Bob 先确定两个大素数 p 和 q ，这两个数不需要保密，因此通信双方可以通过不安全信道协商并确定这两个数；设 p=11 ，q=5； （2）窥探者 Eve 监听他们两个的会话，并得到了 p 和 q 的值； （3）Alice、Bob、Eve 同时选择随机数：设 Alice 选择的还是 r1=3 ，Bob 选择的是 r2=6，Eve 选择两个随机数 r1&#39;=8，r2&#39;=9； （4）Alice、Bob、Eve 分别计算 q^r (mod p)：Alice 计算得 A=4 ，Bob 计算得 B=5 ，Eve 计算得 A&#39;=13,B&#39;=12 （5）然后按照协议 Alice 将自己计算的 A 发送给 Bob，此时 Eve 截获这个 A，并将自己计算得到的 A&#39; 发送给 Bob，Bob 对此过程并不知情； （6）同样 Eve 也截获了 Bob 发送给 Alice 的 B，并将 B&#39; 发送给 Alice，Alice 同样对此过程毫不知情； （7）此时 Eve 可以根据截获的 A 、B 分别计算出 自己和 Alice 通信的密钥 以及 自己和Bob通信的密钥，分别与 Alice 、Bob 共享不同的密钥。 这样一来，Eve 就可以分别与 Alice 和 Bob 通信，而 Alice 和 Bob 仍认为和自己通信的是对方，对第三方并不知情。 作者：Boringboys原文链接：https://www.boringboys.top/article/密码学Diffie-Hellman密钥交换协议版权声明：本文采用BY-NC-SA协议授权，转载请遵守此协议","path":"2020/03/14/密码学Diffie-Hellman密钥交换协议/","date":"03-14","excerpt":"","tags":[{"name":"安全","slug":"安全","permalink":"http://www.auwaves.com/tags/%E5%AE%89%E5%85%A8/"},{"name":"学习","slug":"学习","permalink":"http://www.auwaves.com/tags/%E5%AD%A6%E4%B9%A0/"}],"preview":"https://boringboys-1254394685.cos.ap-shanghai.myqcloud.com/img/52pojie.jpg"},{"title":"Nessus在Windows上的安装","text":"Nessus在Windows上的安装NessusNessus 是目前全世界最多人使用的系统漏洞扫描与分析软件。总共有超过75,000个机构使用Nessus 作为扫描该机构电脑系统的软件。该工具提供完整的电脑漏洞扫描服务，并及时更新其漏洞数据库。Nessus不同于传统的漏洞扫描工具，它可以同时在本机或远端上遥控，进行系统的漏洞分析扫描。 获取安装包Nessus的下载地址:https://www.tenable.com/downloads/nessus点击此链接在浏览器打开如下所示的界面： 然后选择要下载的版本，这里我选择的是Nessus-8.3.1-x64.msi，即Windows版的安装包； 获取激活码在使用Nessus之前，必须先激活服务才可以使用，激活服务的激活码可以在官网获取； （1）首先在刚才的下载界面，可以看到一个“Get Activation Code”按钮，如下图所示，点击它即可前往获取激活码； （2）然后会让你选择获取哪种激活码，如下图所示： 一种是Professional版的，即专业版，需要付费获得激活码； 另外一种是Home版的，即免费版；这里我选择了Home版，点击“Register Now”，前往注册界面； （3）在注册界面填写信息以及邮箱，然后点击“Register”按钮，如下图； （4）当显示如下所示的“Thank You for Registing …”页面时，说明你已经成功获得激活码，激活码以邮件形式发送到了你所填写的邮箱； 安装Nessus（1）点击前面下载的xxx.msi安装包，安装Nessus； 按照安装导向成功安装Nessus后，会自动在浏览器打开一个如下图所示的页面，如果没有可以自己在浏览器输入“https://localhost:8834”打开； 如果输入链接后无法访问，可能是Nessus服务没有运行，前往Nessus的安装目录点击执行“nessus-service.exe”即可，如图双击“nessus-service.exe”启动Nessus服务，双击“Nessus Web Client”可以打开网页版客户端，即“http:localhost:8834”； （2）在打开的“Create an account”页面，输入用户名和密码创建一个账号，以后再次打开此页面使用Nessus时，需要使用这里设置的用户名和密码登录；（3）点击“Continue”后，会出现一个界面让你输入激活码，将前面获得的激活码输入然后继续；（4）然后就是如下图所示的初始化界面了，这一步会下载并安装一些插件，时间会有点久，但没有任何操作，等它完成就可以了； （5）完成之后，显示下面的界面，表示安装成功，你可以创建自己的扫描任务并执行了。 作者：Boringboys原文链接：https://www.boringboys.top/article/Nessus在Windows上的安装/版权声明：本文采用BY-NC-SA协议授权，转载请遵守此协议","path":"2020/03/14/Nessus在Windows上的安装/","date":"03-14","excerpt":"","tags":[{"name":"安全","slug":"安全","permalink":"http://www.auwaves.com/tags/%E5%AE%89%E5%85%A8/"},{"name":"工具","slug":"工具","permalink":"http://www.auwaves.com/tags/%E5%B7%A5%E5%85%B7/"}]},{"title":"Metasploit命令","text":"metasploit命令概述作为一个英语渣，为了自己后期的学习，我把metasploit的帮助菜单简单翻译了一下，方便自己查看的同时也分享给大家。 …翻译中… 核心命令命令 描述 ------- ----------- ? 帮助菜单 banner 在命令行里显示一个好看的metasploit图案（一个很有趣的命令^0^） cd 更改当前工作目录 color 启用或禁用颜色输出 connect 连接到一个主机 exit 退出msfconsole get 获得一个上下文特定变量的值 getg 获得一个全局变量的值 grep 从另一个命令的输出中查找符合条件的行 help 帮助菜单 history 显示历史命令 load 加载框架插件 quit 退出msfconsole（有提示Y/N） repeat 重复一个命令列表 route 通过会话路由流量 save 保存活动数据 sessions 转储会话列表并显示有关会话的信息 set 设置一个上下文特定变量的值 setg 设置一个全局变量的值 sleep 在指定的秒数内不执行任何操作 spool 将控制台输出写入某个文件 threads 查看和操纵后台线程 unload 卸载框架插件 unset 取消设置一个或多个上下文特定变量的值 unsetg 取消设置一个或多个全局变量的值 version 显示框架和控制台库版本号Module CommandsCommand Description ------- ----------- advanced Displays advanced options for one or more modules back Move back from the current context info Displays information about one or more modules loadpath Searches for and loads modules from a path options Displays global options or for one or more modules popm Pops the latest module off the stack and makes it active previous Sets the previously loaded module as the current module pushm Pushes the active or list of modules onto the module stack reload_all Reloads all modules from all defined module paths search Searches module names and descriptions show Displays modules of a given type, or all modules use Selects a module by nameJob CommandsCommand Description ------- ----------- handler Start a payload handler as job jobs Displays and manages jobs kill Kill a job rename_job Rename a jobResource Script CommandsCommand Description ------- ----------- makerc Save commands entered since start to a file resource Run the commands stored in a fileDatabase Backend CommandsCommand Description ------- ----------- analyze Analyze database information about a specific address or address range db_connect Connect to an existing data service db_disconnect Disconnect from the current data service db_export Export a file containing the contents of the database db_import Import a scan result file (filetype will be auto-detected) db_nmap Executes nmap and records the output automatically db_rebuild_cache Rebuilds the database-stored module cache db_remove Remove the saved data service entry db_save Save the current data service connection as the default to reconnect on startup db_status Show the current data service status hosts List all hosts in the database loot List all loot in the database notes List all notes in the database services List all services in the database vulns List all vulnerabilities in the database workspace Switch between database workspacesCredentials Backend CommandsCommand Description ------- ----------- creds List all credentials in the databaseDeveloper CommandsCommand Description ------- ----------- edit Edit the current module or a file with the preferred editor irb Open an interactive Ruby shell in the current context log Display framework.log paged to the end if possible pry Open the Pry debugger on the current module or Framework reload_lib Reload Ruby library files from specified pathsmsfconsolemsfconsole is the primary interface to Metasploit Framework. There is quite alot that needs go here, please be patient and keep an eye on this space! Building ranges and listsMany commands and options that take a list of things can use ranges to avoidhaving to manually list each desired thing. All ranges are inclusive. Ranges of IDsCommands that take a list of IDs can use ranges to help. Individual IDs must beseparated by a , (no space allowed) and ranges can be expressed with either- or ... Ranges of IPsThere are several ways to specify ranges of IP addresses that can be mixedtogether. The first way is a list of IPs separated by just a (ASCII space),with an optional ,. The next way is two complete IP addresses in the form ofBEGINNING_ADDRESS-END_ADDRESS like 127.0.1.44-127.0.2.33. CIDRspecifications may also be used, however the whole address must be given toMetasploit like 127.0.0.0/8 and not 127/8, contrary to the RFC.Additionally, a netmask can be used in conjunction with a domain name todynamically resolve which block to target. All these methods work for both IPv4and IPv6 addresses. IPv4 addresses can also be specified with special octetranges from the NMAP targetspecification ExamplesTerminate the first sessions: sessions -k 1Stop some extra running jobs: jobs -k 2-6,7,8,11..15Check a set of IP addresses: check 127.168.0.0/16, 127.0.0-2.1-4,15 127.0.0.255Target a set of IPv6 hosts: set RHOSTS fe80::3990:0000/110, ::1-::f0f0Target a block from a resolved domain name: set RHOSTS www.example.test/24Framework: 5.0.16-dev-a5184d39dc6a3a8cf2b85538327b57706057e94c Console : 5.0.16-dev-a5184d39dc6a3a8cf2b85538327b57706057e94c 作者：Boringboys原文链接：https://www.boringboys.top/article/Metasploit命令/版权声明：本文采用BY-NC-SA协议授权，转载请遵守此协议","path":"2020/03/14/Metasploit命令/","date":"03-14","excerpt":"","tags":[{"name":"安全","slug":"安全","permalink":"http://www.auwaves.com/tags/%E5%AE%89%E5%85%A8/"},{"name":"工具","slug":"工具","permalink":"http://www.auwaves.com/tags/%E5%B7%A5%E5%85%B7/"},{"name":"学习","slug":"学习","permalink":"http://www.auwaves.com/tags/%E5%AD%A6%E4%B9%A0/"}]}]}